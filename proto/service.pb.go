// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LongUrl struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LongUrl) Reset()         { *m = LongUrl{} }
func (m *LongUrl) String() string { return proto.CompactTextString(m) }
func (*LongUrl) ProtoMessage()    {}
func (*LongUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{0}
}

func (m *LongUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LongUrl.Unmarshal(m, b)
}
func (m *LongUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LongUrl.Marshal(b, m, deterministic)
}
func (m *LongUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LongUrl.Merge(m, src)
}
func (m *LongUrl) XXX_Size() int {
	return xxx_messageInfo_LongUrl.Size(m)
}
func (m *LongUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_LongUrl.DiscardUnknown(m)
}

var xxx_messageInfo_LongUrl proto.InternalMessageInfo

func (m *LongUrl) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ShortUrl struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShortUrl) Reset()         { *m = ShortUrl{} }
func (m *ShortUrl) String() string { return proto.CompactTextString(m) }
func (*ShortUrl) ProtoMessage()    {}
func (*ShortUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{1}
}

func (m *ShortUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShortUrl.Unmarshal(m, b)
}
func (m *ShortUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShortUrl.Marshal(b, m, deterministic)
}
func (m *ShortUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShortUrl.Merge(m, src)
}
func (m *ShortUrl) XXX_Size() int {
	return xxx_messageInfo_ShortUrl.Size(m)
}
func (m *ShortUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_ShortUrl.DiscardUnknown(m)
}

var xxx_messageInfo_ShortUrl proto.InternalMessageInfo

func (m *ShortUrl) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*LongUrl)(nil), "LongUrl")
	proto.RegisterType((*ShortUrl)(nil), "ShortUrl")
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_f80abaa17e25ccc8) }

var fileDescriptor_f80abaa17e25ccc8 = []byte{
	// 125 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x28, 0x48, 0xd2, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x57, 0x92, 0xe6, 0x62, 0xf7, 0xc9, 0xcf, 0x4b, 0x0f, 0x2d, 0xca, 0x11,
	0x12, 0xe0, 0x62, 0x2e, 0x2d, 0xca, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x95,
	0x64, 0xb8, 0x38, 0x82, 0x33, 0xf2, 0x8b, 0x4a, 0xb0, 0xca, 0x1a, 0x79, 0x71, 0x71, 0xa6, 0xa6,
	0x64, 0x96, 0xe4, 0x17, 0x81, 0xa4, 0xe5, 0xb9, 0xd8, 0x9c, 0x8b, 0x52, 0x13, 0x4b, 0x52, 0x85,
	0x38, 0xf4, 0xa0, 0x06, 0x4a, 0x71, 0xea, 0xc1, 0x74, 0x2b, 0x31, 0x08, 0xc9, 0x70, 0x31, 0xbb,
	0xa7, 0x96, 0x08, 0x21, 0xc4, 0xa4, 0xe0, 0x0a, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0xae, 0x31, 0x06,
	0x04, 0x00, 0x00, 0xff, 0xff, 0x49, 0xac, 0x17, 0x67, 0x99, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EditorUrlClient is the client API for EditorUrl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EditorUrlClient interface {
	Create(ctx context.Context, in *LongUrl, opts ...grpc.CallOption) (*ShortUrl, error)
	Get(ctx context.Context, in *ShortUrl, opts ...grpc.CallOption) (*LongUrl, error)
}

type editorUrlClient struct {
	cc *grpc.ClientConn
}

func NewEditorUrlClient(cc *grpc.ClientConn) EditorUrlClient {
	return &editorUrlClient{cc}
}

func (c *editorUrlClient) Create(ctx context.Context, in *LongUrl, opts ...grpc.CallOption) (*ShortUrl, error) {
	out := new(ShortUrl)
	err := c.cc.Invoke(ctx, "/editorUrl/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *editorUrlClient) Get(ctx context.Context, in *ShortUrl, opts ...grpc.CallOption) (*LongUrl, error) {
	out := new(LongUrl)
	err := c.cc.Invoke(ctx, "/editorUrl/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EditorUrlServer is the server API for EditorUrl service.
type EditorUrlServer interface {
	Create(context.Context, *LongUrl) (*ShortUrl, error)
	Get(context.Context, *ShortUrl) (*LongUrl, error)
}

// UnimplementedEditorUrlServer can be embedded to have forward compatible implementations.
type UnimplementedEditorUrlServer struct {
}

func (*UnimplementedEditorUrlServer) Create(ctx context.Context, req *LongUrl) (*ShortUrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedEditorUrlServer) Get(ctx context.Context, req *ShortUrl) (*LongUrl, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterEditorUrlServer(s *grpc.Server, srv EditorUrlServer) {
	s.RegisterService(&_EditorUrl_serviceDesc, srv)
}

func _EditorUrl_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LongUrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EditorUrlServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/editorUrl/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EditorUrlServer).Create(ctx, req.(*LongUrl))
	}
	return interceptor(ctx, in, info, handler)
}

func _EditorUrl_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShortUrl)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EditorUrlServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/editorUrl/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EditorUrlServer).Get(ctx, req.(*ShortUrl))
	}
	return interceptor(ctx, in, info, handler)
}

var _EditorUrl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "editorUrl",
	HandlerType: (*EditorUrlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _EditorUrl_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _EditorUrl_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}
